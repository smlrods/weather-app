(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(537),a=t.n(o),r=t(645),i=t.n(r)()(a());i.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=VT323&display=swap);"]),i.push([n.id,"* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-family: 'VT323', monospace;\n}\n\nbody {\n  height: 100vh;\n  display: flex;\n  place-content: center;\n  place-items: center; \n}\n\n#content {\n  display: flex;\n  flex-direction: column;\n  width: 500px;\n  justify-content: center;\n  align-items: center;\n  border: 3px solid black;\n  padding: 40px 10px;\n  gap: 5px;\n  box-shadow: 10px 10px;\n}\n\n#content h2 {\n  font-size: 40px;\n  border-top: 2px solid black;\n  animation-name: fade;\n  animation-duration: 700ms;\n  animation-fill-mode: forwards;\n}\n\n#result {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n#result #temp {\n  font-size: 50px;\n  animation-name: fade;\n  animation-duration: 700ms;\n  animation-fill-mode: forwards;\n}\n\nbutton {\n  border: 2px solid black;\n  background: none;\n  border-radius: 0;\n  padding: 5px;\n  font-size: 20px;\n  box-shadow: 3px 3px black;\n}\n\nbutton:hover {\n  background-color: black;\n  color: white;\n}\n\ninput[type='text'] {\n  border-radius: 0;\n  border: 2px solid black;\n  font-size: 15px;\n  padding: 5px;\n}\n\n#weather {\n  position: relative;\n  animation-name: weathAnimation;\n  animation-duration: 700ms;\n  animation-fill-mode: forwards;\n}\n\n@keyframes weathAnimation {\n  from {opacity: 0; bottom: -100%;}\n  to {opacity: 1; bottom: 0;}\n}\n\n@keyframes fade {\n  from {opacity: 0;}\n  to {opacity: 1;}\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;EACtB,+BAA+B;AACjC;;AAEA;EACE,aAAa;EACb,aAAa;EACb,qBAAqB;EACrB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,YAAY;EACZ,uBAAuB;EACvB,mBAAmB;EACnB,uBAAuB;EACvB,kBAAkB;EAClB,QAAQ;EACR,qBAAqB;AACvB;;AAEA;EACE,eAAe;EACf,2BAA2B;EAC3B,oBAAoB;EACpB,yBAAyB;EACzB,6BAA6B;AAC/B;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,eAAe;EACf,oBAAoB;EACpB,yBAAyB;EACzB,6BAA6B;AAC/B;;AAEA;EACE,uBAAuB;EACvB,gBAAgB;EAChB,gBAAgB;EAChB,YAAY;EACZ,eAAe;EACf,yBAAyB;AAC3B;;AAEA;EACE,uBAAuB;EACvB,YAAY;AACd;;AAEA;EACE,gBAAgB;EAChB,uBAAuB;EACvB,eAAe;EACf,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,8BAA8B;EAC9B,yBAAyB;EACzB,6BAA6B;AAC/B;;AAEA;EACE,MAAM,UAAU,EAAE,aAAa,CAAC;EAChC,IAAI,UAAU,EAAE,SAAS,CAAC;AAC5B;;AAEA;EACE,MAAM,UAAU,CAAC;EACjB,IAAI,UAAU,CAAC;AACjB",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=VT323&display=swap');\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-family: 'VT323', monospace;\n}\n\nbody {\n  height: 100vh;\n  display: flex;\n  place-content: center;\n  place-items: center; \n}\n\n#content {\n  display: flex;\n  flex-direction: column;\n  width: 500px;\n  justify-content: center;\n  align-items: center;\n  border: 3px solid black;\n  padding: 40px 10px;\n  gap: 5px;\n  box-shadow: 10px 10px;\n}\n\n#content h2 {\n  font-size: 40px;\n  border-top: 2px solid black;\n  animation-name: fade;\n  animation-duration: 700ms;\n  animation-fill-mode: forwards;\n}\n\n#result {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n#result #temp {\n  font-size: 50px;\n  animation-name: fade;\n  animation-duration: 700ms;\n  animation-fill-mode: forwards;\n}\n\nbutton {\n  border: 2px solid black;\n  background: none;\n  border-radius: 0;\n  padding: 5px;\n  font-size: 20px;\n  box-shadow: 3px 3px black;\n}\n\nbutton:hover {\n  background-color: black;\n  color: white;\n}\n\ninput[type='text'] {\n  border-radius: 0;\n  border: 2px solid black;\n  font-size: 15px;\n  padding: 5px;\n}\n\n#weather {\n  position: relative;\n  animation-name: weathAnimation;\n  animation-duration: 700ms;\n  animation-fill-mode: forwards;\n}\n\n@keyframes weathAnimation {\n  from {opacity: 0; bottom: -100%;}\n  to {opacity: 1; bottom: 0;}\n}\n\n@keyframes fade {\n  from {opacity: 0;}\n  to {opacity: 1;}\n}"],sourceRoot:""}]);const A=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,a,r){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);o&&i[d[0]]||(void 0!==r&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=r),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),a&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=a):d[4]="".concat(a)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(a," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var r={},i=[],A=0;A<n.length;A++){var s=n[A],c=o.base?s[0]+o.base:s[0],d=r[c]||0,p="".concat(c," ").concat(d);r[c]=d+1;var l=t(p),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==l)e[l].references++,e[l].updater(u);else{var m=a(u,o);o.byIndex=A,e.splice(A,0,{identifier:p,updater:m,references:1})}i.push(p)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var r=o(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<r.length;i++){var A=t(r[i]);e[A].references--}for(var s=o(n,a),c=0;c<r.length;c++){var d=t(r[c]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}r=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var r=e[o]={id:o,exports:{}};return n[o](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),a=t.n(o),r=t(569),i=t.n(r),A=t(565),s=t.n(A),c=t(216),d=t.n(c),p=t(589),l=t.n(p),u=t(426),m={};function f(n,e,t,o){const a=document.getElementById("result");a.textContent="";const r=document.createElement("p");r.id="weather";const i=document.createElement("h2");if(i.textContent=n,r.textContent=t,a.appendChild(r),a.appendChild(i),"404"!=o){const n=document.createElement("p"),t=document.createElement("button");n.id="temp",n.textContent=e.celsius+"°C",a.appendChild(n),t.textContent="Celsius",a.appendChild(t),function(n,e,t){n.addEventListener("click",(()=>{"Celsius"==n.textContent?(n.textContent="Fahrenheit",e.textContent=t.fahrenheit+"°F"):(n.textContent="Celsius",e.textContent=t.celsius+"°C")}))}(t,n,e)}if("404"==o){const n=document.createElement("img");n.src="https://78.media.tumblr.com/a71bc83661d3be8192c7d6cd62e2e966/tumblr_pa2knrX5Zz1xu0hh4o1_500.gif",a.appendChild(n)}}function C(n){f(n.name,n.temp,n.weather.main,"")}m.styleTagTransform=l(),m.setAttributes=s(),m.insert=i().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=d(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;async function B(n){return(await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${n}&appid=8087a745a911326b4ecdd982363dd8d3`,{mode:"cors"})).json()}function E(n){let e={};var t;return e.temp={},e.name=n.name,e.weather=n.weather[0],e.temp.celsius=(t=n.main.temp,Math.round(t-273.15)),e.temp.fahrenheit=function(n){return Math.round(1.8*(n-273.15)+32)}(n.main.temp),e}document.querySelector("button").addEventListener("click",(()=>{const n=document.getElementById("city");B(n.value).then((function(e){var t;"404"==e.cod?f((t=e).message,"","",t.cod):C(E(e)),n.value=""}))})),addEventListener("load",(()=>{B("London").then((n=>C(E(n))))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,